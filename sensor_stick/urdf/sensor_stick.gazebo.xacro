<?xml version="1.0"?>
<robot>
  <!-- ros_control plugin -->
  <!-- <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/sensor_stick</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo> -->

  <!--base_link-->
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>

  <!--link_1-->
  <gazebo reference="link_1">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Orange</material>
  </gazebo>

  <!--link_2-->
  <gazebo reference="link_2">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/White</material>
  </gazebo>

  <!--camera_link-->
  <gazebo reference="camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="camera_rgb_frame">
    <sensor type="camera" name="rgb_cam">
      <update_rate>60</update_rate>
      <visualize>true</visualize>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
          <!-- <format>B8G8R8</format> -->
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>rgb_cam</namespace>
          <remapping>image_raw:=image_raw</remapping>
          <remapping>camera_info:=camera_info</remapping>
        </ros>
        <!-- camera_name>omit so it defaults to sensor name</camera_name-->
        <!-- <frame_name>omit so it defaults to link name</frame_name> -->
        <frame_name>camera_rgb_frame</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="camera_rgb_frame">
    <sensor type="depth" name="depth_cam">
      <!-- Set always_on only sensor, not on plugin -->
      <always_on>0</always_on>
      <!-- Set update_rate only sensor, not on plugin -->
      <update_rate>60</update_rate>
      <camera name="sensor_stick_depth_cam">
        <horizontal_fov>1.92</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <!-- R8G8B8 will make all objects bule -->
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <distortion>
          <!-- <k1>0.1</k1>
          <k2>0.2</k2>
          <k3>0.3</k3>
          <p1>0.4</p1>
          <p2>0.5</p2>
          <center>0.5 0.5</center> -->
        </distortion>
        <noise>
          <!-- <type>gaussian</type> -->
          <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
          <!-- <mean>0.0</mean> -->
          <!-- <stddev>0.007</stddev> -->
        </noise>
      </camera>

      <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
        <!-- Change namespace, camera name and topics so -
             * Raw images are published to /custom_ns/custom_camera/custom_image
             * Depth images are published to /custom_ns/custom_camera/custom_image_depth
             * Raw image camera info is published to /custom_ns/custom_camera/custom_info_raw
             * Depth image camera info is published to /custom_ns/custom_camera/custom_info_depth
             * Point cloud is published to /custom_ns/custom_camera/custom_points
        -->
        <ros>
          <namespace>sensor_stick</namespace>
          <!-- <remapping>depth_camera/image_raw:=custom_camera/custom_image</remapping>
          <remapping>depth_camera/image_depth:=custom_camera/custom_image_depth</remapping>
          <remapping>depth_camera/camera_info:=custom_camera/custom_info_raw</remapping>
          <remapping>depth_camera/camera_info_depth:=custom_camera/custom_info_depth</remapping>
          <remapping>depth_camera/points:=custom_camera/custom_points</remapping> -->
        </ros>
        <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
        <camera_name>depth_camera</camera_name>
        <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
        <frame_name>camera_rgb_optical_frame</frame_name>
        <!-- hackbaseline is the length of baseline, its an important parameter for stereo camera. -->
        <!-- hackbaseline reference  http://docs.ros.org/en/melodic/api/sensor_msgs/html/msg/CameraInfo.html -->
        <!-- <hack_baseline>0.07</hack_baseline> -->

        <!-- No need to repeat distortion parameters or to set autoDistortion -->
        <min_depth>0.001</min_depth>
        <max_depth>300.0</max_depth>
      </plugin>
    </sensor>
  </gazebo>

</robot>